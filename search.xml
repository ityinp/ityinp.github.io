<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java实现图片压缩</title>
    <url>/b83f7f1a.html</url>
    <content><![CDATA[<html><head></head><body><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> {</span><br><span class="line">	<span class="comment">/** 将压缩分辨率设置为1080P */</span></span><br><span class="line">	<span class="type">double</span> <span class="variable">compressionResolution</span> <span class="operator">=</span> <span class="number">1920.00</span>;</span><br><span class="line">	<span class="comment">/** 源图片路径 */</span></span><br><span class="line">	<span class="type">String</span> <span class="variable">sourcePicturePath</span> <span class="operator">=</span> <span class="string">"d:\\图片压缩\\1.png"</span>;</span><br><span class="line">	<span class="comment">/** 压缩后保存图片的路径 */</span></span><br><span class="line">	<span class="type">String</span> <span class="variable">compressedPicturePath</span> <span class="operator">=</span> <span class="string">"d:\\图片压缩\\2.png"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 获取要压缩的文件 */</span></span><br><span class="line">	<span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(sourcePicturePath);</span><br><span class="line">	<span class="comment">/** 将文件转图片 */</span></span><br><span class="line">	<span class="type">BufferedImage</span> <span class="variable">sourceImg</span> <span class="operator">=</span> ImageIO.read(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file));</span><br><span class="line">	<span class="comment">/** 获取图片的宽高 */</span></span><br><span class="line">	<span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> sourceImg.getWidth();</span><br><span class="line">	<span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> sourceImg.getHeight();</span><br><span class="line">	System.out.println(String.format(<span class="string">"源图片宽[%s] 高[%s]"</span>, width, height));</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 分辨率小于要压缩的分辨率时不压缩 */</span></span><br><span class="line">	<span class="keyword">if</span> (width &lt;= compressionResolution) {</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 计算压缩的倍率 */</span></span><br><span class="line">	<span class="type">double</span> <span class="variable">compressionRatio</span> <span class="operator">=</span> width / compressionResolution;</span><br><span class="line">            </span><br><span class="line">	<span class="comment">/** 计算压缩后的宽高 */</span></span><br><span class="line">	width = (<span class="type">int</span>) (width / compressionRatio);</span><br><span class="line">	height = (<span class="type">int</span>) (height / compressionRatio);</span><br><span class="line"></span><br><span class="line">	System.out.println(String.format(<span class="string">"压缩后图片宽[%s] 高[%s]"</span>, width, height));</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 开始压缩 */</span></span><br><span class="line">	Thumbnails.of(file)</span><br><span class="line">		.size(width, height)</span><br><span class="line">		.toFile(<span class="keyword">new</span> <span class="title class_">File</span>(compressedPicturePath));</span><br><span class="line"></span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">	<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">"压缩图片失败"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

</body></html>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>NPS服务端跟客户端的配置</title>
    <url>/8284fff5.html</url>
    <content><![CDATA[<html><head></head><body><h1 id="NPS-服务端跟客户端的配置"><a href="#NPS-服务端跟客户端的配置" class="headerlink" title="NPS 服务端跟客户端的配置"></a>NPS 服务端跟客户端的配置</h1><h2 id="服务端使用"><a href="#服务端使用" class="headerlink" title="服务端使用"></a>服务端使用</h2><h3 id="服务端-linux-darwin-安装"><a href="#服务端-linux-darwin-安装" class="headerlink" title="服务端 linux|darwin 安装"></a>服务端 linux|darwin 安装</h3><h4 id="下载完服务器压缩包后，解压，然后进入解压后的文件夹-执行安装命令"><a href="#下载完服务器压缩包后，解压，然后进入解压后的文件夹-执行安装命令" class="headerlink" title="下载完服务器压缩包后，解压，然后进入解压后的文件夹 执行安装命令"></a>下载完服务器压缩包后，解压，然后进入解压后的文件夹 执行安装命令</h4><p> 　　对于 linux|darwin <font color="#FF00FF">sudo ./nps install</font><br> 　　对于 windows，管理员身份运行 cmd，进入程序目录 <font color="#FF00FF">nps.exe start</font></p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>　　对于 linux|darwin sudo nps start<br>　　对于 windows，管理员身份运行 cmd，进入程序目录 nps.exe start<br>　　安装后windows配置文件位于 C:\Program Files\nps，linux和darwin位于/etc/nps<br>　　停止和重启可用，  <font color="#FF00FF">stop</font> 和  <font color="#FF00FF">restart</font></p>
<h5 id="如果发现没有启动成功，可以使用-nps-exe-stop，然后运行-nps-exe-运行调试，或查看日志-Windows-日志文件位于当前运行目录下，linux-和-darwin-位于-var-log-nps-log"><a href="#如果发现没有启动成功，可以使用-nps-exe-stop，然后运行-nps-exe-运行调试，或查看日志-Windows-日志文件位于当前运行目录下，linux-和-darwin-位于-var-log-nps-log" class="headerlink" title="如果发现没有启动成功，可以使用 nps(.exe) stop，然后运行 nps.(exe) 运行调试，或查看日志 (Windows 日志文件位于当前运行目录下，linux 和 darwin 位于 /var/log/nps.log)"></a>如果发现没有启动成功，可以使用 nps(.exe) stop，然后运行 nps.(exe) 运行调试，或查看日志 (Windows 日志文件位于当前运行目录下，linux 和 darwin 位于 /var/log/nps.log)</h5><p>　　问服务端 ip:web 服务端口（默认为 8080）<br>　　使用用户名和密码登陆（默认 admin/123，正式使用一定要更改）<br>　　创建客户端</p>
<h3 id="客户端注册到系统服务-开机启动、守护进程"><a href="#客户端注册到系统服务-开机启动、守护进程" class="headerlink" title="客户端注册到系统服务 (开机启动、守护进程)"></a>客户端注册到系统服务 (开机启动、守护进程)</h3><p>对于 linux、darwin<br>　　注册： <font color="#FF00FF">sudo ./npc install</font>  其他参数（例如-server=xx -vkey=xx或者-config=xxx）<br>　　启动： <font color="#FF00FF">sudo npc start</font><br>　　停止： <font color="#FF00FF">sudo npc stop</font><br>　　如果需要更换命令内容需要先卸载./npc uninstall，再重新注册<br>　　对于 windows，使用管理员身份运行 cmd<br>　　注册： <font color="#FF00FF">npc.exe install </font> 其他参数（例如-server=xx -vkey=xx或者-config=xxx）<br>　　启动： <font color="#FF00FF">npc.exe start</font><br>　　停止： <font color="#FF00FF">npc.exe stop</font><br>　　如果需要更换命令内容需要先卸载 npc.exe uninstall，再重新注册<br>　　如果需要当客户端退出时自动重启客户端，请按照如图所示配置</p>
<!-- ![1](/temp/NPS服务端跟客户端的配置/1.png) -->
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/1.1akygkiad4qo.jpg" alt="图片"><br>注册到服务后，日志文件 windows 位于当前目录下，linux 和 darwin 位于 /var/log/npc.log</p>
</body></html>]]></content>
      <categories>
        <category>内网穿透</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
        <tag>NPS</tag>
        <tag>NPC</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux重置密码</title>
    <url>/bc09ee4e.html</url>
    <content><![CDATA[<html><head></head><body><p>1、重启虚拟机，在引导界面按“e”（按鼠标左键，用键盘控制上下），进入类界面，把中间的ro改为</p>
<p><code>rw rd.break</code></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/0abf922b3f161b0fc8273fb6ec1281f6_3d110013893e278e79f9eb8fb7b036a5_e045304b7ddc4342876513da9fd9c44d_20230926164240A373.2xik77zvrrc0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/9a27b45126b43bba335f4c98c190dbc3_78248313e5db49ff34525072ab77cac9_92dcf5e866814969882d583eef55c0c8_20230926164244A374.1iyjw09357wg.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/aa39740483f059a824408b8959498e51_da1504b874b84956caebd03b7a5aa957_a9be29e34cd74c099a266a92ee0f7594_20230926164247A375.18f9osjo2log.jpg" alt="图片"></p>
<p>2、按住Ctrl+“x”，进入紧急界面；</p>
<p>3、回滚原系统:输入<code>chroot /sysroot</code>再回车；</p>
<p>4、设置密码：输入passwd，会弹出new password，直接输入你要修改的密码（会提示您输入二次新密码）；</p>
<p>5、检查安全性：输入<code>touch /.autorelabel</code>；</p>
<p>6、退出紧急界面：输入exit；</p>
<p>7、重启：reboot。</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/1da2594014b62e44e7574265523802b2_131e9843d6f63a5992e0d4ef92d357f9_e47c7f625fba42208e0f0f7536bd39ff_20230926164257A376.1rhuwsbgtoow.jpg" alt="图片"></p>
<p>（注：图中左边的提示点为要输入的命令）</p>
</body></html>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>密码</tag>
      </tags>
  </entry>
  <entry>
    <title>PicX一个基于web页面的GitHub图床工具</title>
    <url>/cffd4bc3.html</url>
    <content><![CDATA[<html><head></head><body><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">链接 https://picx.xpoet.cn/</span><br></pre></td></tr></tbody></table></figure>



<h3 id="配置GitHub的token"><a href="#配置GitHub的token" class="headerlink" title="配置GitHub的token"></a>配置GitHub的token</h3><p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/1.3hhxt5ip7w00.jpg" alt="image-20240117142241714"></p>
<h3 id="选择仓库跟分支，然后在选择一个图片上传的目录-点击确认"><a href="#选择仓库跟分支，然后在选择一个图片上传的目录-点击确认" class="headerlink" title="选择仓库跟分支，然后在选择一个图片上传的目录 点击确认"></a>选择仓库跟分支，然后在选择一个图片上传的目录 点击确认</h3><p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/2.5l9z9upscf4.jpg" alt="图片"></p>
<h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/3.6fsqqip7l3c0.jpg" alt="image-20240117142411992"></p>
</body></html>]]></content>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7 关闭防火墙</title>
    <url>/1fa40c40.html</url>
    <content><![CDATA[<html><head></head><body><p>查看防火墙状态：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></tbody></table></figure>

<p>关闭防火墙：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></tbody></table></figure>

<p>永久禁止防火墙启动：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>防火墙</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7 固定局域网 ip</title>
    <url>/7a29a0ef.html</url>
    <content><![CDATA[<html><head></head><body><p>1、首先查看自己的 ip 是什么：</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/201126c0753d0d00bef63f869aba0909_image_20230719114716A045.4yt76kgslu80.jpg" alt="1"></p>
<p>发现有两个网卡设备，其中 eno33 是我们的有线网卡，ip 地址是 192.168.7.29</p>
<p>2、控制台输入：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">netstat -rn</span><br></pre></td></tr></tbody></table></figure>

<p>来查看子网掩码跟网关</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/927f2a8de7138825eac8ca00276d5c33_image_20230719114749A046.7jq4bs0wbt40.jpg" alt="2"></p>
<p>3、得到需要的信息后，更改网络配置文件： 进入如下路径</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/</span><br></pre></td></tr></tbody></table></figure>

<p>找到与自己网卡名字相同的 ifcfg-xxxx 文件打开吧编辑 列如：我的是 ens33, 我就打开下图的文件</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/ba81d79f0d284ba94020306655314c27_image_20230719114814A047.26aue70x1ctc.jpg" alt="3"></p>
<p>一下内容文档中没有的加进去，有的修改即可（子网掩码、默认网关设置成未固定 ip 时查询出来的，本机地址固定成想要的 ip）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">BOOTPROTO="static"#静态IP</span><br><span class="line">IPADDR=192.168.7.27#本机地址</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">GATEWAY=192.168.7.254 #默认网关</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">ONBOOT="yes"#开机启动</span><br></pre></td></tr></tbody></table></figure>

<p>4、重启网络：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>cetnos7</tag>
      </tags>
  </entry>
  <entry>
    <title>vue发布到nginx刷新页面404，以及跳转页面重定向到首页</title>
    <url>/42a6e55b.html</url>
    <content><![CDATA[<html><head></head><body><h4 id="server里增加加一下代码"><a href="#server里增加加一下代码" class="headerlink" title="server里增加加一下代码"></a>server里增加加一下代码</h4><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">location <span class="meta">@router</span> {</span><br><span class="line">  rewrite ^.*$ /index.html last;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h4 id="location-里增加如下代码"><a href="#location-里增加如下代码" class="headerlink" title="location /里增加如下代码"></a>location /里增加如下代码</h4><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">try_files $uri $uri/ @router;</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbixweb端配置主机监控</title>
    <url>/3b635a38.html</url>
    <content><![CDATA[<html><head></head><body><h1 id="1-创建主机"><a href="#1-创建主机" class="headerlink" title="1.创建主机"></a>1.创建主机</h1><p>•主机名称是zabbix-agent客户端里面配置的 Hostname=””</p>
<p>•群组随便</p>
<p>•interfaces 添加一个客户端，IP地址是zabbix-agent客户端的ip地址，端口默认10050</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/f89fe49d049d0efe077ab8c4ff8a10ee_image_20231122144357A049.1345f1n7xzm8.jpg" alt="图片"></p>
<h1 id="2-添加监控项"><a href="#2-添加监控项" class="headerlink" title="2.添加监控项"></a>2.添加监控项</h1><p>•刚添加主机的时候没有监控项可用性是灰色的，添加监控项后会变成绿色</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/f89fe49d049d0efe077ab8c4ff8a10ee_image_20231122144357A049.1345f1n7xzm8.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/c2ff14a6698f9f85a1bc8defcb5a51d8_image_20231122144246A048.6q5q2plgqs80.jpg" alt="图片"></p>
<p>找到对应主机的‘监控项’鼠标单击，进入到监控项页面</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/24a3d8be2437996252154e2b70f6d17f_image_20231122144536A050.5dfoprcz8sk0.jpg" alt="图片"></p>
<p>新增监控项-键值是对应的监控项目，更具需求选择，演示的是监控CPU使用率的</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/ca10e0d2f5a3da841416de964effa769_image_20231122144701A051.5bsszdaa9oc0.jpg" alt="图片"></p>
<h1 id="3-添加图形"><a href="#3-添加图形" class="headerlink" title="3.添加图形"></a>3.添加图形</h1><p>•找到对应主机的‘图形’鼠标单击，进入到监控项页面</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/0feb42e8ad38dfc5c6aea7613f56efb2_image_20231122145038A052.64ffefguyd80.jpg" alt="图片"></p>
<p>创建图形选择监控项为刚刚创建好的处理器使用频率监控</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/54dbce22e0df05fd33e5051c33ed483d_image_20231122145122A053.2al4y1nar4is.jpg" alt="图片"></p>
<h1 id="4-数据监测"><a href="#4-数据监测" class="headerlink" title="4.数据监测"></a>4.数据监测</h1><p>监测-主机，找到对应的主机单击‘图形’</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/781061895efd6d92184ea867704ebad9_image_20231122145313A054.7czp9k5z0ls0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/7e2e85b480d974fea0433f3b134adc71_image_20231122145359A055.2ojsnrvyt9y0.jpg" alt="图片"></p>
</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix服务端搭建</title>
    <url>/916b376b.html</url>
    <content><![CDATA[<html><head></head><body><p><strong>zabbix服务端搭建</strong></p>
<h1 id="一、Mysql8-0-30-部署"><a href="#一、Mysql8-0-30-部署" class="headerlink" title="一、Mysql8.0.30 部署"></a>一、Mysql8.0.30 部署</h1><h2 id="关闭系统防火墙"><a href="#关闭系统防火墙" class="headerlink" title="关闭系统防火墙"></a>关闭系统防火墙</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# systemctl stop firewalld</span><br><span class="line">[root@localhost ~]# systemctl disable firewalld</span><br><span class="line">[root@localhost ~]# vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></tbody></table></figure>



<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# cd /usr/local/src/</span><br><span class="line">[root@localhost /usr/local/src]# wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.30-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line"># 解压</span><br><span class="line">[root@localhost /usr/local/src]# tar -xvf mysql-8.0.30-1.el7.x86_64.rpm-bundle.tar</span><br><span class="line"># 忽略依赖检查强制安装，因为捆绑包里已经带依赖了，所以只要全部安装就可以，检查的话分先后顺序很麻烦的</span><br><span class="line">[root@localhost /usr/local/src]# sudo rpm -ivh mysql-community-*  --force --nodeps</span><br><span class="line">#创建数据存储目录</span><br><span class="line">[root@localhost ~]# mkdir -p /data/mysql</span><br><span class="line">[root@localhost ~]# chown mysql:mysql /data/mysql</span><br><span class="line">#修改配置文件</span><br><span class="line">[root@localhost ~]# vi /etc/my.cnf</span><br><span class="line">[root@localhost ~]# cat /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">log-error=/var/log/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">collation-server=utf8mb4_general_ci</span><br><span class="line">port=3306</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">max_connections=500</span><br></pre></td></tr></tbody></table></figure>

<h2 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#先查看libaio包是否有安装（安装了则不用管，未安装可能出现启动失败缺包的情况）</span><br><span class="line">#我这里使用的是aliyun的yum源（需要的可以在文档最底部查看）</span><br><span class="line">[root@localhost ~]# yum install libaio</span><br><span class="line">[root@localhost ~]# systemctl enable mysqld</span><br><span class="line">[root@localhost ~]# systemctl start mysqld</span><br><span class="line">#启动失败的话可以查看日志 /var/log/mysqld.log</span><br></pre></td></tr></tbody></table></figure>

<h2 id="获取密码登录Mysql"><a href="#获取密码登录Mysql" class="headerlink" title="获取密码登录Mysql"></a>获取密码登录Mysql</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# cat /var/log/mysqld.log | grep password</span><br><span class="line">2023-11-22T01:21:03.904164Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: (Ua?#Uw&amp;b1Us</span><br><span class="line">[root@localhost ~]# mysql -uroot -p(Ua?#Uw&amp;b1Us</span><br><span class="line">mysql&gt; alter user 'root'@'localhost' identified by 'Qihang@123';</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">#由于MySQL8.0 有密码验证组件，若希望设置简单的密码，需要修改服务验证条件</span><br><span class="line"># 密码检查等级，0/LOW、1/MEDIUM、2/STRONG</span><br><span class="line">mysql&gt; set global validate_password.policy=0;</span><br><span class="line"># 密码的最短长度</span><br><span class="line">mysql&gt; set global validate_password.length=6;</span><br><span class="line"># 密码至少要包含的小写字母个数和大写字母个数</span><br><span class="line">mysql&gt; set global validate_password.mixed_case_count=0;</span><br><span class="line">#创建zabbix库(这里zabbix对库的编码格式有需求)</span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">#创建用户（指定使用的身份验证插件）</span><br><span class="line">mysql&gt; create user 'zabbix'@'localhost' identified with mysql_native_password by '123123';</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to 'zabbix'@'localhost';</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/578a8393a52979ef8d88b5e653fde783_image_20231122091701A039.28pan7f7ev6s.jpg" alt="图片"></p>
<h1 id="二、nginx-部署"><a href="#二、nginx-部署" class="headerlink" title="二、nginx 部署"></a>二、nginx 部署</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# rpm -Uvh http://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.20.0-1.el7.ngx.x86_64.rpm</span><br><span class="line">[root@localhost ~]# mkdir /data/web</span><br><span class="line">[root@localhost ~]# mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak</span><br><span class="line">#修改nginx的配置文件,要修改的主要是server{} ，也可以复制过去直接覆盖原来的配置文件</span><br><span class="line">[root@localhost ~]# vi /etc/nginx/nginx.conf </span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line">error_log  /var/log/nginx/error.log notice;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events {</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">http {</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    #gzip  on;</span><br><span class="line">    server {</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  localhost;</span><br><span class="line">      root         /data/web;</span><br><span class="line">      location / {</span><br><span class="line">        index  index.php index.html index.htm;</span><br><span class="line">      }</span><br><span class="line">      location ~ \.php$ {</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# systemctl  enable nginx </span><br><span class="line">[root@localhost ~]# systemctl  start nginx </span><br></pre></td></tr></tbody></table></figure>

<h1 id="三、PHP-部署"><a href="#三、PHP-部署" class="headerlink" title="三、PHP 部署"></a>三、PHP 部署</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">[root@localhost ~]# yum -y install epel-release</span><br><span class="line">[root@localhost ~]# curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">[root@localhost ~]# rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">#webtatic源，一个web服务的源</span><br><span class="line">#安装php7及其它依赖软件</span><br><span class="line">[root@localhost ~]# yum -y install gcc gcc-c++ php72w-cli php72w-fpm php72w-gd php72w-mbstring php72w-bcmath php72w-xml php72w-ldap php72w-mysqlnd</span><br><span class="line">[root@localhost ~]# vi /etc/php.ini </span><br><span class="line">368:max_execution_time = 300</span><br><span class="line">378:max_input_time = 300</span><br><span class="line">656:post_max_size = 16M</span><br><span class="line">[root@localhost ~]# cd /data/web/</span><br><span class="line">[root@localhost /data/web]# vi index.php   #创建php测试页面</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">[root@localhost ~]# systemctl  enable php-fpm</span><br><span class="line">[root@localhost ~]# systemctl  start php-fpm</span><br></pre></td></tr></tbody></table></figure>

<p>这里可以使用浏览器验证一下Nginx和PHP(内网中直接输入IP)</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/aa95e25cc2c921bc72c140ea1c11a624_image_20231122095538A040.6no7xtbnpxg0.jpg" alt="图片"></p>
<h1 id="四、zabbix-server-部署"><a href="#四、zabbix-server-部署" class="headerlink" title="四、zabbix-server 部署"></a>四、zabbix-server 部署</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#创建用户</span><br><span class="line">[root@localhost ~]# groupadd zabbix</span><br><span class="line">[root@localhost ~]# useradd -g zabbix -M -s /sbin/nologin zabbix</span><br><span class="line">#下载安装</span><br><span class="line">[root@localhost ~]# cd /usr/local/src</span><br><span class="line">[root@localhost /usr/local/src]# wget https://cdn.zabbix.com/zabbix/sources/stable/6.0/zabbix-6.0.1.tar.gz</span><br><span class="line">[root@localhost /usr/local/src]# tar -xf zabbix-6.0.1.tar.gz</span><br><span class="line">[root@localhost /usr/local/src]# cd zabbix-6.0.1/</span><br><span class="line">#安装依赖</span><br><span class="line">[root@localhost /usr/local/src/zabbix-6.0.1]# yum -y install  mysql-devel pcre-devel openssl-devel zlib-devel libxml2-devel net-snmp-devel net-snmp libssh2-devel OpenIPMI-devel libevent-devel openldap-devel   libcurl-devel</span><br><span class="line">#编译安装</span><br><span class="line">[root@localhost /usr/local/src/zabbix-6.0.1]# ./configure --sysconfdir=/etc/zabbix --enable-server --with-mysql --with-net-snmp --with-libxml2 --with-ssh2 --with-openipmi --with-zlib --with-libpthread --with-libevent --with-openssl --with-ldap --with-libcurl --with-libpcre</span><br><span class="line">[root@localhost /usr/local/src/zabbix-6.0.1]# make install</span><br><span class="line"></span><br><span class="line">#修改配置文件（前面的数字代表的是要修改属性字段的行数 例如 12:）</span><br><span class="line">[root@localhost ~]# vi /etc/zabbix/zabbix_server.conf</span><br><span class="line">[root@localhost ~]# grep -n '^[a-Z]' /etc/zabbix/zabbix_server.conf</span><br><span class="line">12:ListenPort=10051</span><br><span class="line">38:LogFile=/tmp/zabbix_server.log</span><br><span class="line">87:DBHost=localhost</span><br><span class="line">99:DBName=zabbix</span><br><span class="line">115:DBUser=zabbix</span><br><span class="line">123:DBPassword=123123</span><br><span class="line">507:Timeout=4</span><br><span class="line">593:LogSlowQueries=3000</span><br><span class="line">708:StatsAllowedIP=127.0.0.1</span><br><span class="line"></span><br><span class="line">#向数据库中导入zabbix的库表及数据（注意导入的顺序）</span><br><span class="line">[root@localhost ~]# mysql -uzabbix -p123123 zabbix &lt; /usr/local/src/zabbix-6.0.1/database/mysql/schema.sql</span><br><span class="line">[root@localhost ~]# mysql -uzabbix -p123123 zabbix &lt; /usr/local/src/zabbix-6.0.1/database/mysql/images.sql</span><br><span class="line">[root@localhost ~]# mysql -uzabbix -p123123 zabbix &lt; /usr/local/src/zabbix-6.0.1/database/mysql/data.sql</span><br><span class="line"></span><br><span class="line">#移动zabbix前端页面到网站根目录</span><br><span class="line">[root@localhost ~]# cp -rp /usr/local/src/zabbix-6.0.1/ui/* /data/web/</span><br><span class="line">cp：是否覆盖"/data/web/index.php"？ y</span><br><span class="line"></span><br><span class="line">#配置zabbix系统启停命令（注意这个文件是新增的）</span><br><span class="line">[root@localhost ~]# vi /usr/lib/systemd/system/zabbix-server.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Zabbix Server with MySQL DB</span><br><span class="line">After=syslog.target network.target mysqld.service</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/local/sbin/zabbix_server -f</span><br><span class="line">User=zabbix</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">#重新加载system文件</span><br><span class="line">[root@Zabbix mysql]# systemctl daemon-reload</span><br><span class="line">[root@Zabbix mysql]# systemctl enable zabbix-server</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/zabbix-server.service to /usr/lib/systemd/system/zabbix.service.</span><br><span class="line">[root@Zabbix mysql]# systemctl start zabbix-server</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/f4df4aa1987110295a9da56523cd7168_image_20231122101058A041.5gqq9gritqc0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/b2cd599c236ce910b0c2d9f80ef3a642_image_20231122101202A042.7a3q237s9ns0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/995a7b2721f189ade969482388d30c1c_image_20231122101239A043.2ew0rjysbixw.jpg" alt="图片"></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[root@localhost ~]# cp /data/web/conf/zabbix.conf.php.example /data/web/conf/zabbix.conf.php</span><br><span class="line">[root@localhost ~]# chown zabbix:zabbix /data/web/conf/zabbix.conf.php</span><br><span class="line">[root@localhost ~]# vi /data/web/conf/zabbix.conf.php</span><br><span class="line">#只修改PASSWORD的密码</span><br><span class="line">$DB['PASSWORD']			= '123123';</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/913c1788546f4c947604cce34f296266_image_20231122101345A044.4xrza8iokl80.jpg" alt="图片"></p>
<p>默认账号密码：Admin zabbix</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/4b3cdf5c96d86cb9d8bdb859d396d9b0_image_20231122101418A045.4rilgfoquw80.jpg" alt="图片"></p>
<h1 id="六、解决zabbix-6-0-中文乱码问题"><a href="#六、解决zabbix-6-0-中文乱码问题" class="headerlink" title="六、解决zabbix 6.0 中文乱码问题"></a>六、解决zabbix 6.0 中文乱码问题</h1><p>将windows的 C:\Windows\Fonts 路径下将楷体的ttf文件复制到linux的 /data/web/assets/fonts 目录下，</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/609a0ec3968476b1be264d32a867c814_image_20231122101555A046.64lc2zqpjm80.jpg" alt="图片"></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#目录下有simkai.ttf这个新上传的文件</span><br><span class="line">[root@localhost ~]# ll /data/web/assets/fonts</span><br><span class="line">总用量 12252</span><br><span class="line">-rw-r--r-- 1 zabbix zabbix   756072 2月  28 2022 DejaVuSans.ttf</span><br><span class="line">-rw-r--r-- 1 root   root   11787328 11月 22 10:20 simkai.ttf</span><br><span class="line">#替换配置文件中的默认字体</span><br><span class="line">[root@localhost ~]# sed -i 's/DejaVuSans/simkai/g' /data/web/include/defines.inc.php</span><br><span class="line">#如果这里之前是修改了网页路径的话，到自己的路径下找include/defines.inc.php即可</span><br></pre></td></tr></tbody></table></figure>

</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix监控项</title>
    <url>/1b74b923.html</url>
    <content><![CDATA[<html><head></head><body><table>
<thead>
<tr>
<th align="right">监控项</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="right">监控项</td>
<td>进程</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="right">名称</td>
<td>键值</td>
<td>键值说明</td>
<td>信息类型</td>
<td>单位</td>
<td>自定义监控项</td>
<td>自定义监控项配置</td>
<td>名称</td>
<td>参数</td>
</tr>
<tr>
<td align="right">上行流量监控</td>
<td>net.if.out[ens192]</td>
<td>“ens192”网卡名称</td>
<td>数字</td>
<td></td>
<td>否</td>
<td></td>
<td>每秒更改</td>
<td></td>
</tr>
<tr>
<td align="right">下行流量监控</td>
<td>net.if.in[ens192]</td>
<td>“ens192”网卡名称</td>
<td>数字</td>
<td></td>
<td>否</td>
<td></td>
<td>每秒更改</td>
<td></td>
</tr>
<tr>
<td align="right">处理器使用率监控</td>
<td>system.cpu.load[percpu]</td>
<td></td>
<td>浮点数</td>
<td>%</td>
<td>否</td>
<td></td>
<td>自定义倍数</td>
<td>100</td>
</tr>
<tr>
<td align="right">处理器负载监控</td>
<td>system.cpu.util</td>
<td></td>
<td>浮点数</td>
<td>%</td>
<td>否</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="right">已使用内存监控</td>
<td>Mem_pre</td>
<td></td>
<td>浮点数</td>
<td>%</td>
<td>是</td>
<td>UserParameter=Mem_pre,echo $(free | awk ‘/Mem/{printf(“%.2f”), $3/$2*100}’)</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="right">磁盘写入监控</td>
<td>custom.vfs.dev.write.sectors[sda]</td>
<td>“sda”硬盘名称</td>
<td>数字</td>
<td>b</td>
<td>是</td>
<td>UserParameter=custom.vfs.dev.write.sectors[*],cat /proc/diskstats | grep $1 | head -1 | awk ‘{print $$10}’</td>
<td>每秒更改</td>
<td></td>
</tr>
<tr>
<td align="right">自定义倍数</td>
<td>512</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="right">磁盘读取监控</td>
<td>custom.vfs.dev.read.sectors[sda]</td>
<td>“sda”硬盘名称</td>
<td>数字</td>
<td>b</td>
<td>是</td>
<td>UserParameter=custom.vfs.dev.read.sectors[*],cat /proc/diskstats | grep $1 | head -1 | awk ‘{print $$6}’</td>
<td>每秒更改</td>
<td></td>
</tr>
<tr>
<td align="right">自定义倍数</td>
<td>512</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix自定义监控项</title>
    <url>/9ccde0e4.html</url>
    <content><![CDATA[<html><head></head><body><p>在zabbixAgent服务端是修改配置文件</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># vi /etc/zabbix zabbix_agentd.conf</span><br><span class="line">333 UnsafeUserParameters=1</span><br><span class="line"></span><br><span class="line">在文件最下面添加自定义监控项</span><br><span class="line"></span><br><span class="line">//监控内存   Mem_pre是键值，后面的是执行的命令也可以是脚本</span><br><span class="line">serParameter=Mem_pre,echo  $(free | awk '/Mem/{printf("%.2f"), $3/$2*100}')</span><br></pre></td></tr></tbody></table></figure>

<p>重启zabbixAgent服务</p>
<p>zabbixweb端配置监控项</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/2e4e49bbc2570c5f6af3cac3021126d1_image_20231122150911A057.56pd75fqkks0.jpg" alt="图片"></p>
<p>创建图形</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/fdcfe376b37c15e1fdca8073cf0ab41f_image_20231122150949A058.57otailtbqk0.jpg" alt="图片"></p>
<p>查看监控图形</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/8892163b0ce1338a5090cf83ac113cc9_image_20231122151023A059.4f2z8bwz3nc0.jpg" alt="图片"></p>
</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
        <tag>监控项</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix配置触发器</title>
    <url>/863a3196.html</url>
    <content><![CDATA[<html><head></head><body><p>创建触发器</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/e712b575071b5fcec0b6803b94a3fa03_image_20231122153511A060.76mdndvcpow0.jpg" alt="图片"></p>
<p>添加表达式，选择监控项，这里去最近的值，监控CPU返回的占用大于10就进行报警，处理器使用率监控返回最大值为100</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/bcee0a996fd3c739d2a12c25f374a4c3_image_20231122153708A061.630ise9845s0.jpg" alt="图片"></p>
<p>添加完成</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/c853b937174569d0bddfeb7f81e9f859_image_20231122153912A062.6dcf4wpvm480.jpg" alt="图片"></p>
<p>触发一下CPU过高，监测可以看到预警线</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/32036db396a995f46f1867ab259af33d_image_20231122154057A063.57z5hhy2w000.jpg" alt="图片"></p>
<p>监测-问题可以看到已经出发预警了</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/7ac96f2539771f599811bca247ab50df_image_20231122154147A064.p0ddmp9lpog.jpg" alt="图片"></p>
</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix预警后通过企业微信机器人发送通知</title>
    <url>/83de23f5.html</url>
    <content><![CDATA[<html><head></head><body><h1 id="1-创建脚本"><a href="#1-创建脚本" class="headerlink" title="1.创建脚本"></a>1.创建脚本</h1><p>•首先在你的zabbix服务器找到这个目录alertscripts</p>
<p>•可以用find查找</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># find / -name 'alertscripts'</span><br><span class="line">/usr/local/share/zabbix/alertscripts</span><br><span class="line">进入目录 cd /usr/local/share/zabbix/alertscripts</span><br></pre></td></tr></tbody></table></figure>

<p>•创建脚本文件</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># vi qiYeWeiXinPush.sh</span><br><span class="line"></span><br><span class="line">key='cde60db4-98d7-4704-a9ea-54780f4ffd9c' #替换成机器人的key</span><br><span class="line">title=$2   </span><br><span class="line">content=$3   </span><br><span class="line">msgtype='markdown'  #你要的具体消息内容</span><br><span class="line">url=https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$key</span><br><span class="line">json="{\"msgtype\":\"${msgtype}\",\"markdown\":{\"content\":\"${title}\n${content}\"}}"</span><br><span class="line">curl -H "Content-Type: application/json" -X POST -d "$json" $url</span><br></pre></td></tr></tbody></table></figure>

<p>•赋予脚本执行权限</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">chmod +x qiYeWeiXinPush.sh</span><br></pre></td></tr></tbody></table></figure>

<p>•执行一下脚本是否有效</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># ./qiYeWeiXinPush.sh zabbix 标题 内容</span><br><span class="line">{"errcode":0,"errmsg":"ok"}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/8dab0c0a177f72fa3aba8f5537e03b9a_image_20231122155808A067.4o6kgmx102o0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/0ee51557ba6b349e78d81ec508df6ac0_image_20231122155330A065.28vw513e72jo.jpg" alt="图片"></p>
<h1 id="2-zabbixweb端配置"><a href="#2-zabbixweb端配置" class="headerlink" title="2.zabbixweb端配置"></a>2.zabbixweb端配置</h1><p>•管理-报警媒介类型-创建媒介类型</p>
<p>•脚本名称是‘alertscripts’文件夹下面的脚本文件名</p>
<p>•添加三个脚本参数，脚本后面这三个</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/d0c2c91a55881232a2537cbabc578f53_image_20231122160022A070.msm622lhocw.jpg" alt="图片"></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">{ALERT.SENDTO}</span><br><span class="line">{ALERT.SUBJECT}</span><br><span class="line">{ALERT.MESSAGE}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/52ab8f893f7e15a9fd6ea77f1f905350_image_20231122155848A068.25a7rim9iphc.jpg" alt="图片"></p>
<p>创建动作</p>
<p>•配置-动作-<a href="javascript:void(0)">Trigger actions</a>-创建动作</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/f4a7a8d84ca9318e102050e49202a5da_image_20231122160108A071.352m7urmmx00.jpg" alt="图片"></p>
<p>选择触发当前动作的触发器</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/3b37c7be95ed6c83f32071150c6720de_image_20231122160259A072.46o06d24sx40.jpg" alt="图片"></p>
<p>添加操作，选择以后群组跟用户，勾选Custom message 自定义消息</p>
<p>•主题</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">故障{TRIGGER.STATUS},服务器:{HOSTNAME1}发生:{TRIGGER.NAME}故障! 故障通知！！</span><br></pre></td></tr></tbody></table></figure>

<p>•消息</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&gt;告警主机:&lt;font color=\"comment\"&gt;{HOSTNAME1}&lt;/font&gt;</span><br><span class="line">&gt;IP地址：&lt;font color=\"comment\"&gt;{HOST.CONN} &lt;/font&gt;</span><br><span class="line">&gt;告警时间:&lt;font color=\"comment\"&gt;{EVENT.DATE} {EVENT.TIME}(UTC)&lt;/font&gt;</span><br><span class="line">&gt;告警等级:&lt;font color=\"comment\"&gt;{TRIGGER.SEVERITY}&lt;/font&gt;</span><br><span class="line">&gt;告警信息: &lt;font color=\"comment\"&gt;{TRIGGER.NAME}&lt;/font&gt;</span><br><span class="line">&gt;告警项目:&lt;font color=\"comment\"&gt;{TRIGGER.KEY1}&lt;/font&gt;</span><br><span class="line">&gt;问题详情:&lt;font color=\"comment\"&gt;{ITEM.NAME}:{ITEM.VALUE}&lt;/font&gt;</span><br><span class="line">&gt;当前状态:&lt;font color=\"comment\"&gt;{TRIGGER.STATUS}:{ITEM.VALUE1}&lt;/font&gt;</span><br><span class="line">&gt;事件ID:&lt;font color=\"comment\"&gt;{EVENT.ID}&lt;/font&gt;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/66ef83c319aeea8a118e0f74d800b135_image_20231122160424A073.4qbdbxg6yx60.jpg" alt="图片"></p>
<p>添加故障恢复时的操作</p>
<p>•主题</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">恢复{TRIGGER.STATUS},服务器:{HOSTNAME1}:{TRIGGER.NAME}已恢复！！</span><br></pre></td></tr></tbody></table></figure>

<p>•消息</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&gt;告警主机:&lt;font color=\"comment\"&gt;{HOSTNAME1}&lt;/font&gt;</span><br><span class="line">&gt;IP地址：&lt;font color=\"comment\"&gt;{HOST.CONN} &lt;/font&gt;</span><br><span class="line">&gt;告警时间:&lt;font color=\"comment\"&gt;{EVENT.DATE} {EVENT.TIME}(UTC)&lt;/font&gt;</span><br><span class="line">&gt;告警等级:&lt;font color=\"comment\"&gt;{TRIGGER.SEVERITY}&lt;/font&gt;</span><br><span class="line">&gt;告警信息: &lt;font color=\"comment\"&gt;{TRIGGER.NAME}&lt;/font&gt;</span><br><span class="line">&gt;告警项目:&lt;font color=\"comment\"&gt;{TRIGGER.KEY1}&lt;/font&gt;</span><br><span class="line">&gt;问题详情:&lt;font color=\"comment\"&gt;{ITEM.NAME}:{ITEM.VALUE}&lt;/font&gt;</span><br><span class="line">&gt;当前状态:&lt;font color=\"comment\"&gt;{TRIGGER.STATUS}:{ITEM.VALUE1}&lt;/font&gt;</span><br><span class="line">&gt;事件ID:&lt;font color=\"comment\"&gt;{EVENT.ID}&lt;/font&gt;</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/fdb4f7cb71e80e3aa92aacc2c4ec1406_image_20231122160624A074.30jgn5urcwi0.jpg" alt="图片"></p>
<p>执行添加</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/8f2e0e0e78b5971b0385d05ddd45eac7_image_20231122160726A075.2mpj2oki2dg0.jpg" alt="图片"></p>
<p>创建用户报警媒介</p>
<p>•管理-用户-Admin-报警媒介</p>
<p>•添加报警媒介</p>
<p>•类型选择刚刚创建的媒介类型，收件人是执行脚本时的第一个参数</p>
<p>•添加-更新</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/e01cbf7e10a1a60591dab6c1eb6eac4a_image_20231122160840A076.78z96n7azss0.jpg" alt="图片"></p>
<p>3.效果</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/3504c3d1317f092f3403a5518d39dbf2_image_20231122161244A079.79f0c5207vc0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/7ebf978c8f66d7647581f6df71a01447_image_20231122161218A077.3qai16r6e840.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/a0f1a40f93ad24532c34d5922f7efb20_image_20231122161231A078.hbakx5yyhe0.jpg" alt="图片"></p>
<p>故障恢复后发送的通知</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/53fd71e7aed5cfd159787fddf8919c28_image_20231122161536A080.1q3xquh0o4u8.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/e6d93247129af9c7d566fe8c9666c4b4_image_20231122161608A081.1ms3u9nkrbeo.jpg" alt="图片"></p>
</body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
        <tag>企业微信机器人通知</tag>
      </tags>
  </entry>
  <entry>
    <title>安装zabbix-agent</title>
    <url>/61d73a59.html</url>
    <content><![CDATA[<html><head></head><body><p>1.安装zabbix存储库</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"># rpm -<span class="title class_">Uvh</span> <span class="attr">https</span>:<span class="comment">//repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span></span><br><span class="line"># yum clean all &amp;&amp; yum makecache fast</span><br><span class="line"># yum -y install zabbix-agent zabbix-sender zabbix-java-gateway</span><br><span class="line"># systemctl enable --now zabbix-agent zabbix-java-gateway</span><br><span class="line"># netstat -anpt | egrep <span class="string">"zabbix|java"</span></span><br></pre></td></tr></tbody></table></figure>

<p>2.修改zabbix-agent配置文件</p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"># vim /etc/zabbix/zabbix_agentd.<span class="property">conf</span></span><br><span class="line"><span class="title class_">Server</span>=<span class="string">"ZabbixServerIP"</span></span><br><span class="line"><span class="title class_">ServerActive</span>=<span class="string">"ZabbixServerIP"</span></span><br><span class="line"><span class="title class_">Hostname</span>=<span class="string">"本机主机名，在zabbix-web端配置主机时需要填写”</span></span><br><span class="line"><span class="string">重启服务：</span></span><br><span class="line"><span class="string"># systemctl restart zabbix-agent</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>接口操作MySQL跟MongoDB事务回滚问题</title>
    <url>/2d55720e.html</url>
    <content><![CDATA[<html><head></head><body><h1 id="接口操作MySQL跟MongoDB事务回滚问题，MySQL可正常回滚，MongoDB无法正常回滚"><a href="#接口操作MySQL跟MongoDB事务回滚问题，MySQL可正常回滚，MongoDB无法正常回滚" class="headerlink" title="接口操作MySQL跟MongoDB事务回滚问题，MySQL可正常回滚，MongoDB无法正常回滚"></a>接口操作MySQL跟MongoDB事务回滚问题，MySQL可正常回滚，MongoDB无法正常回滚</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>通常使用的事务注解：@Tra nsactional 是不会对MongoDB生效的，但是在一些生产接口中无法避免同时使用MySQL跟MongoDB的操作。</p>
<h2 id="问题处理方式"><a href="#问题处理方式" class="headerlink" title="问题处理方式"></a>问题处理方式</h2><p>1、创建 <code>MultiTransactional.java</code></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MultiTransactional {</span><br><span class="line">	String[] value() <span class="keyword">default</span> {};</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>2、创建 <code>TransactionConfig.java</code></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.MongoDatabaseFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.MongoTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransactionConfig</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "mybatisTransactionManager")</span></span><br><span class="line">    <span class="meta">@Primary</span> <span class="comment">//事务默认使用mysql数据库</span></span><br><span class="line">    <span class="keyword">public</span> DataSourceTransactionManager <span class="title function_">testTransactionManager</span><span class="params">(<span class="meta">@Qualifier("dataSource")</span> DataSource dataSource)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>(dataSource);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "mongoTransactionManager")</span></span><br><span class="line">    MongoTransactionManager <span class="title function_">transactionManager</span><span class="params">(MongoDatabaseFactory factory)</span>{</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MongoTransactionManager</span>(factory);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>3、创建 <code>DbTxBroker.java</code></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DbTxBroker</span> {</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Transactional(value = "mybatisTransactionManager")</span></span><br><span class="line">	<span class="keyword">public</span> &lt;V&gt; V <span class="title function_">inTransactionMybatisTransactionManager</span><span class="params">(Callable&lt;V&gt; callable)</span> {</span><br><span class="line">		<span class="keyword">try</span> {</span><br><span class="line">			<span class="keyword">return</span> callable.call();</span><br><span class="line">		} <span class="keyword">catch</span> (RuntimeException e) {</span><br><span class="line">			<span class="keyword">throw</span> e;</span><br><span class="line">		} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Transactional(value = "mongoTransactionManager")</span></span><br><span class="line">	<span class="keyword">public</span> &lt;V&gt; V <span class="title function_">inTransactionMongoTransactionManager</span><span class="params">(Callable&lt;V&gt; callable)</span> {</span><br><span class="line">		<span class="keyword">try</span> {</span><br><span class="line">			<span class="keyword">return</span> callable.call();</span><br><span class="line">		} <span class="keyword">catch</span> (RuntimeException e) {</span><br><span class="line">			<span class="keyword">throw</span> e;</span><br><span class="line">		} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>4、创建  <code>ComboTransaction.java</code></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.druid.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ComboTransaction</span> {</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> DbTxBroker dbTxBroker;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> &lt;V&gt; V <span class="title function_">inCombinedTx</span><span class="params">(Callable&lt;V&gt; callable, String[] transactions)</span> {</span><br><span class="line">		<span class="keyword">if</span> (callable == <span class="literal">null</span>) {</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		}</span><br><span class="line"></span><br><span class="line">		Callable&lt;V&gt; combined = Stream.of(transactions).filter(ele -&gt; !StringUtils.isEmpty(ele)).distinct()</span><br><span class="line">				.reduce(callable, (r, tx) -&gt; {</span><br><span class="line">					<span class="keyword">switch</span> (tx) {</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"mybatisTransactionManager"</span>:</span><br><span class="line">						<span class="keyword">return</span> () -&gt; dbTxBroker.inTransactionMybatisTransactionManager(r);</span><br><span class="line">					<span class="keyword">case</span> <span class="string">"mongoTransactionManager"</span>:</span><br><span class="line">						<span class="keyword">return</span> () -&gt; dbTxBroker.inTransactionMongoTransactionManager(r);</span><br><span class="line">					<span class="keyword">default</span>:</span><br><span class="line">						<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">					}</span><br><span class="line">				}, (r1, r2) -&gt; r2);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">try</span> {</span><br><span class="line">			<span class="keyword">return</span> combined.call();</span><br><span class="line">		} <span class="keyword">catch</span> (RuntimeException e) {</span><br><span class="line">			<span class="keyword">throw</span> e;</span><br><span class="line">		} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>5、创建 <code>MultiTransactionAop.java</code></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiTransactionAop</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ComboTransaction comboTransaction;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MultiTransactionAop</span><span class="params">(ComboTransaction comboTransaction)</span> {</span><br><span class="line">        <span class="built_in">this</span>.comboTransaction = comboTransaction;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut("@annotation(com.xx.xx.MultiTransactional)")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span> {</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around("pointCut() &amp;&amp; @annotation(multiTransactional)")</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">inMultiTransactions</span><span class="params">(ProceedingJoinPoint pjp, MultiTransactional multiTransactional)</span> {</span><br><span class="line">        <span class="keyword">return</span> comboTransaction.inCombinedTx(() -&gt; {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="keyword">return</span> pjp.proceed();</span><br><span class="line">            } <span class="keyword">catch</span> (Throwable throwable) {</span><br><span class="line">                <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> RuntimeException) {</span><br><span class="line">                    <span class="keyword">throw</span> (RuntimeException) throwable;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(throwable);</span><br><span class="line">            }</span><br><span class="line">        }, multiTransactional.value());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}<span class="number">6</span>、最后在使用接口上使用 <span class="meta">@MultiTransactional</span> 的注解</span><br></pre></td></tr></tbody></table></figure>

<p>mybatisTransactionManager跟mongoTransactionManager表示同时启用数据mybatis操作的数据库跟MongoDB同时开启事务同时提交事务</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@MultiTransactional(value = {"mybatisTransactionManager", "mongoTransactionManager"})</span></span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>事务</tag>
      </tags>
  </entry>
  <entry>
    <title>通过ikuai搭建openVPN实现异地组网</title>
    <url>/fa8d9853.html</url>
    <content><![CDATA[<html><head></head><body><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="1、ikuai镜像文件"><a href="#1、ikuai镜像文件" class="headerlink" title="1、ikuai镜像文件"></a>1、ikuai镜像文件</h4><h4 id="2、有公网IP的服务器"><a href="#2、有公网IP的服务器" class="headerlink" title="2、有公网IP的服务器"></a>2、有公网IP的服务器</h4><h4 id="3、openVPN客户端"><a href="#3、openVPN客户端" class="headerlink" title="3、openVPN客户端"></a>3、openVPN客户端</h4><p>搭建ikuai<br>ikuai镜像官方下载地址</p>
<p><code>https://www.ikuai8.com/component/download</code></p>
<p>本次教程使用腾讯云服务器进行安装，无需下载通过上面下载链接下载镜像</p>
<p>1.准备一台ubuntu系统的服务器<br>2.下载ISO安装包<br>x32位<br><code>wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x32_3.5.11_Build202112031159.iso -O ikuai8.iso</code><br>x64位<br><code>wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x64_3.5.11_Build202112031159.iso -O ikuai8.iso</code><br>安装版本 iKuai8_x64_3.5.11_Build202112031159.iso 可通过历史日志 选择对应版本进行下载 _x64或_x32 需要指定是安装64位还是32位的镜像</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/1.66tok7wtpxc0.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/2.1w0mb1hgnozk.jpg" alt="图片"></p>
<p>这里演示安装的是最新版的 版本号是</p>
<p><code>wget https://www.ikuai8.com/download.php?n=/3.x/iso/iKuai8_x64_3.6.12_Build202212231532.iso -O ikuai8.iso</code></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/3.755b1y1xxp00.jpg" alt="图片"></p>
<p>连上服务器输入下载镜像命令</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/4.23pi0j5bruio.jpg" alt="图片"></p>
<p>等待下载完成</p>
<p>3.挂载ISO镜像</p>
<p><code>sudo mount ikuai8.iso /mnt</code></p>
<p>4.复制ISO镜像启动文件</p>
<p><code>sudo cp -rpf /mnt/boot /</code></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/5.3tuzvdzoua00.jpg" alt="图片"></p>
<p>5.重启服务器</p>
<p>6.使用VNC连接服务器</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/6.1xh3mtok4wo0.jpg" alt="图片"></p>
<p>7.按提示安装ikuai</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/7.2mkialsxc4e0.jpg" alt="图片"></p>
<p>到此界面ikuai就算安装完成了</p>
<p>但是现在ikuai系统是无法联网跟无法使用外网访问web端的</p>
<p>8.设置网卡绑定</p>
<ol>
<li>进入菜单 1</li>
<li>输入 del lan1 eth0 删除默认绑定的lan1口</li>
<li>输入 set wan1 eth0 绑定wan1口</li>
</ol>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/8.7e6mr8iiez00.jpg" alt="图片"></p>
<p>输入q返回上一级</p>
<p>9.开启外网访问web端</p>
<ol>
<li>进入菜单 o</li>
<li>输入 2</li>
</ol>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/9.2yljwivrdxk0.jpg" alt="图片"></p>
<p>此时浏览器输入公网IP就能访问ikuai的web管理页面了<br>ikuai默认账号密码admin/admin</p>
<p>10.配置openVPN服务端<br>登录web端后依次点击菜单 认证计费-本地认证服务-OpenVPN服务端</p>
<p>点击开启OpenVPN服务端</p>
<p>拉倒页面最下面点击保存</p>
<p>左上角有一个 到处windows客户端配置 的按钮，先把配置导出来，后面要用到</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/10.5r15fu3kcb00.jpg" alt="图片"></p>
<p>然后进入菜单 认证计费-认证账号管理-账号管理 新增一个测试用户</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/11.6q9grv6op4g0.jpg" alt="图片"></p>
<p>新增账号配置</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/12.29ei373vaxes.jpg" alt="图片"></p>
<h3 id="安装使用openVPN客户端"><a href="#安装使用openVPN客户端" class="headerlink" title="安装使用openVPN客户端"></a>安装使用openVPN客户端</h3><p>打开从ikuai里面导出的conf文件打开修改公网IP</p>
<p>然后将后缀conf改成ovpn</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/13.b23uc7gbja8.jpg" alt="图片"></p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/14.71u5ymsioeo0.jpg" alt="图片"></p>
<p>打开后鼠标右击任务栏图标 选择 导入-导入配置文件 导入配置文件</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/15.5oetm2usm100.jpg" alt="图片"></p>
<p>导入后右击连接</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/16.7cx53ptba440.jpg" alt="图片"></p>
<p>此时会需要输入在ikuai新增的账号密码 点击确认开始连接</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/17.22azkxokg57k.jpg" alt="图片"></p>
<p>右下角任务栏图标变成绿色即连接成功</p>
<p><img src="https://jsd.cdn.zzko.cn/gh/ityinp/hexoBlog-images@main/root/18.5ry4wyupwkw0.jpg" alt="图片"></p>
<p>鼠标悬浮上可以看到刚刚给当前登录以后固定的内网ip</p>
<p>此时可以输入192.168.100.0 通过内网打开ikuai web端</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">注意：不能吧用户IP固定成xxx.xxx.xxx.1 因为.1会分配给ikuai的服务器，导致在内网IP分配问题</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>VPN</category>
      </categories>
      <tags>
        <tag>VPN</tag>
        <tag>爱快</tag>
        <tag>ikuai</tag>
        <tag>openVpn</tag>
      </tags>
  </entry>
</search>
